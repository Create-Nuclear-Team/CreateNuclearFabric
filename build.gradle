plugins {
	id 'fabric-loom' version '1.3-SNAPSHOT'
	id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	// Add repositories to retrieve artifacts from in here.
	// You should only use this when depending on other mods because
	// Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
	// See https://docs.gradle.org/current/userguide/declaring_repositories.html
	// for more information about repositories.
	maven { url = "https://maven.parchmentmc.org" } // Parchment mappings
	maven { url = "https://api.modrinth.com/maven" } 	// LazyDFU
	maven { url = "https://jitpack.io" }				// Mixin Extras, fabric ASM
	maven { url = "https://mvn.devos.one/snapshots/" } 	// Create, Porting Lib, Forge Tags, Milk Lib, Registrate
	maven { // Flywheel
		url = "https://maven.tterrag.com/"
		content {
			// need to be specific here due to version overlaps
			includeGroup("com.jozufozu.flywheel")
		}
	}
	maven {
		url 'https://www.cursemaven.com'
		content {
			includeGroup "curse.maven"
		}
	}
	maven { url = "https://cursemaven.com" } // Forge Config API Port
	// Also Create : Secondary (...why do I have to import this as well?)
	maven { url = "https://maven.jamieswhiteshirt.com/libs-release"
		content {
			includeGroup("com.jamieswhiteshirt")
		}
	}	// Reach Entity Attributes
	maven { url = "https://maven.terraformersmc.com/releases/" } // Mod Menu

	// location of the maven that hosts JEI files since January 2023
	maven { url = "https://maven.blamejared.com/" }
	maven { url = "https://maven.quiltmc.org/repository/release" } // Quilt Mappings
	maven { url = "https://maven.cafeteria.dev/releases" } // Fake Player API

	maven { url "https://maven.shedaniel.me/" }
	//maven { url "<https://maven.architectury.dev/>" }
}

loom {
	runs {
		datagen {
			inherit server
			name "Data Generator"
			vmArg "-Dfabric-api.datagen"
			vmArg "-Dfabric-api.datagen.output-dir=${file("src/main/generated")}"
			vmArg "-Dfabric-api.datagen.modid=createnuclear"

			runDir "build/datagen"
		}
	}

}

sourceSets {
	main {
		resources {
			srcDirs += [
					'src/main/generated'
			]
		}
	}
}

dependencies {

	// To change the versionsÂ² see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	//mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	// println("il me dit que j'ai la mauvaise version mais ou ? ${project.fabric_api_version}")

	mappings(loom.layered {
		it.mappings("org.quiltmc:quilt-mappings:${minecraft_version}+build.${qm_version}:intermediary-v2")
		it.parchment("org.parchmentmc.data:parchment-${minecraft_version}:${parchment_version}@zip")
		it.officialMojangMappings { nameSyntheticMembers = false }
	})

	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_api_version}"


	// Create - dependencies are added transitively
	modImplementation("com.simibubi.create:create-fabric-1.20.1:${create_version}")

	modLocalRuntime("com.terraformersmc:modmenu:${modmenu_version}")
	modLocalRuntime("maven.modrinth:lazydfu:${lazydfu_version}")


	/** JEI api **/
	modCompileOnlyApi("mezz.jei:jei-${jei_minecraft_version}-common-api:${jei_version}")
	modCompileOnlyApi("mezz.jei:jei-${jei_minecraft_version}-fabric-api:${jei_version}")
	/** 	    **/
	/** REI API **/
	modCompileOnly "me.shedaniel:RoughlyEnoughItems-api-fabric:$rei_version"
	modCompileOnly "me.shedaniel:RoughlyEnoughItems-default-plugin-fabric:$rei_version"
	/** 	    **/
	/** EMI API **/
	modCompileOnly("dev.emi:emi-fabric:${emi_version}:api")
	/** 	    **/


	switch (recipe_viewer.toLowerCase(Locale.ROOT)) {
	// at runtime, use the full JEI jar for Fabric
		case "jei": modRuntimeOnly("mezz.jei:jei-${jei_minecraft_version}-fabric:${jei_version}");  break// <- pour avoir le JEI in game
		case "rei": modRuntimeOnly "me.shedaniel:RoughlyEnoughItems-fabric:$rei_version"; break// <- pour avoir le REI in game
		case "emi": modLocalRuntime("dev.emi:emi-fabric:${emi_version}"); break// <- pour avoir le EMI in game
		case "disabled": break
		default: println("Unknown recipe viewer specified: $recipe_viewer. Must be JEI, REI, EMI, or disabled.")
	}


	// Fabric ASM (enum extension etc)
	modImplementation("com.github.Chocohead:Fabric-ASM:v2.3") {
		exclude (group: "net.fabricmc.fabric-api")
	}
	include "com.github.Chocohead:Fabric-ASM:v2.3"
}

processResources {

	// require dependencies to be the version compiled against or newer
	Map<String, String> properties = new HashMap<>()
	properties.put("version", minecraft_version)
	properties.put("create_version", create_version)
	properties.put("minecraft_version", minecraft_version)

	properties.forEach((k, v) -> inputs.property(k, v))

	filesMatching("fabric.mod.json") {
		expand properties
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}"}
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}